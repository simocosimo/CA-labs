


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000200 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000200
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         total_tickets
                               DCD              0           ;space reserved for
                                                             the total_tickets 
                                                            variable
   47 00000004         Sector_uqty
   48 00000004         Heap_Mem
                               SPACE            Heap_Size
   49 00000204         __heap_limit
   50 00000204         
   51 00000204         ; Readonly area with sector infos
   52 00000204                 AREA             SECTORINFO, DATA, READONLY
   53 00000000 00000001 
              00000019 
              00000002 
              00000028 
              00000003 
              00000037 
              00000004 
              00000041 
              00000005 
              00000050 
              00000006 
              0000006E Sector_prices
                               DCD              0x01, 25, 0x02, 40, 0x03, 55, 0
x04, 65, 0x05, 80, 0x06, 110
   54 00000030 00000002 
              000000FA 
              00000005 
              000000FA 
              00000003 
              00000226 
              00000001 
              00000096 
              00000004 
              00000064 
              00000006 
              000000C8 Sector_quantity
                               DCD              0x02, 250, 0x05, 250, 0x03, 550
, 0x01, 150, 0x04, 100, 0x06, 200
   55 00000060 06      Num_sectors
                               DCB              6
   56 00000061         
   57 00000061         
   58 00000061         ; Readonly area with sector infos
   59 00000061                 AREA             TICKETREQUEST, DATA, READONLY
   60 00000000 00000005 
              00000002 
              00000003 
              0000000A 
              00000001 
              00000078 Tickets DCD              0x05, 2, 0x03, 10, 0x01, 120
   61 00000018 00000003 
                       Ticket_requests
                               DCD              3



ARM Macro Assembler    Page 3 


   62 0000001C         
   63 0000001C                 PRESERVE8
   64 0000001C                 THUMB
   65 0000001C         
   66 0000001C         
   67 0000001C         ; Vector Table Mapped to Address 0 at Reset
   68 0000001C         
   69 0000001C                 AREA             RESET, DATA, READONLY
   70 00000000                 EXPORT           __Vectors
   71 00000000         
   72 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   73 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   74 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   75 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   76 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   77 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   78 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   79 0000001C 00000000        DCD              0           ; Reserved
   80 00000020 00000000        DCD              0           ; Reserved
   81 00000024 00000000        DCD              0           ; Reserved
   82 00000028 00000000        DCD              0           ; Reserved
   83 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   84 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   85 00000034 00000000        DCD              0           ; Reserved
   86 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   87 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   88 00000040         
   89 00000040         ; External Interrupts
   90 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   91 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   92 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   93 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   94 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   95 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   96 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   97 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   98 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   99 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1
  100 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
  101 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
  102 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
  103 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
  104 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
  105 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
  106 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
  107 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 



ARM Macro Assembler    Page 4 


                                                            Clock
  108 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
  109 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
  110 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
  111 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
  112 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  113 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  114 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  115 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  116 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  117 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  118 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  119 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  120 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  121 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  122 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  123 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  124 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  125 000000CC         
  126 000000CC         
  127 000000CC                 IF               :LNOT::DEF:NO_CRP
  128 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  129 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  130 00000004                 ENDIF
  131 00000004         
  132 00000004         
  133 00000004                 AREA             |.text|, CODE, READONLY
  134 00000000         
  135 00000000         
  136 00000000         ; Reset Handler
  137 00000000         
  138 00000000         Reset_Handler
                               PROC
  139 00000000                 EXPORT           Reset_Handler             [WEAK
]
  140 00000000 4837            LDR              R0, =Reset_Handler
  141 00000002         
  142 00000002         ; your code here    
  143 00000002 F7FF FFFE       BL               initCopy
  144 00000006         
  145 00000006 4A37            LDR              R2, =Sector_uqty



ARM Macro Assembler    Page 5 


  146 00000008 4B37            LDR              R3, =Sector_prices
  147 0000000A 4E38            LDR              R6, =Tickets
  148 0000000C 4F38            LDR              R7, =Ticket_requests
  149 0000000E 683F            LDR              R7, [R7]
  150 00000010 F8DF A0E0       LDR              R10, =total_tickets
  151 00000014 F04F 0C00       MOV              R12, #0
  152 00000018 F04F 0800       MOV              R8, #0
  153 0000001C F04F 0900       MOV              R9, #0
  154 00000020         
  155 00000020 6834    reqLoop LDR              R4, [R6]
  156 00000022 4611            MOV              R1, R2
  157 00000024 F7FF FFFE       BL               subGet      ;qty result in R5
  158 00000028 F8D6 8004       LDR              R8, [R6, #4] ;take qty from req
                                                            uest
  159 0000002C 44C1            ADD              R9, R9, R8
  160 0000002E 46C3            MOV              R11, R8     ;store the qty for 
                                                            later
  161 00000030 EBB5 0808       SUBS             R8, R5, R8  ;sub them to check 
                                                            avilability
  162 00000034 BFBC F04F 
              0C00             MOVLT            R12, #0
  163 0000003A F04F 0B01       MOVLT            R11, #0x01
  164 0000003E DB13            BLT              finalSet    ;if not ok, jump to
                                                             end and set regist
                                                            ers
  165 00000040 F7FF FFFE       BL               subGet      ;update array
  166 00000044         
  167 00000044 4619            MOV              R1, R3
  168 00000046 F04F 0800       MOV              R8, #0
  169 0000004A F7FF FFFE       BL               subGet      ;price result in R5
                                                            
  170 0000004E FB05 FB0B       MUL              R11, R5, R11 ;mul qty * price
  171 00000052 44DC            ADD              R12, R12, R11 ;save to register
                                                            
  172 00000054         
  173 00000054 F106 0608       ADD              R6, R6, #8  ;update index
  174 00000058 F102 0208       ADD              R2, R2, #8
  175 0000005C 1E7F            SUBS             R7, R7, #1  ;loop
  176 0000005E BF08 F04F 
              0B00             MOVEQ            R11, #0
  177 00000064 D000            BEQ              finalSet
  178 00000066 E7DB            B                reqLoop
  179 00000068         
  180 00000068 F1B9 0F0A 
                       finalSet
                               CMP              R9, #0xA
  181 0000006C BFC8 EA4F 
              0C6C             ASRGT            R12, #1     ;50% discount if #t
                                                            icket > 10
  182 00000072 F8CA C000       STR              R12, [R10]  ;save into memory t
                                                            he tot cost
  183 00000076 4700    end_p   BX               R0
  184 00000078                 ENDP
  185 00000078         
  186 00000078         ; Routine to get value from array or to update the quant
                       ity array
  187 00000078         ; If R8 is not set: get value from array
  188 00000078         ; If R8 is set: update the value in the array
  189 00000078         subGet  PROC



ARM Macro Assembler    Page 6 


  190 00000078 B50C            PUSH             {R2, R3, LR} ;R4 set from outsi
                                                            de, the target valu
                                                            e
  191 0000007A 4A1F            LDR              R2, =Num_sectors
  192 0000007C 6812            LDR              R2, [R2]
  193 0000007E EA4F 02C2       LSL              R2, #3      ;*8 to get the stop
                                                             index
  194 00000082         
  195 00000082 680B            LDR              R3, [R1]    ;get first quantity
                                                            
  196 00000084 42A3    loop    CMP              R3, R4
  197 00000086 BF04 F1B8 
              0F00             CMPEQ            R8, #0
  198 0000008C 684D            LDREQ            R5, [R1, #4] ;save result in R5
                                                            
  199 0000008E D00A            BEQ              end_s
  200 00000090 BF14 42A3       CMPNE            R3, R4
  201 00000094 F8C1 8004       STREQ            R8, [R1, #4]
  202 00000098 D005            BEQ              end_s
  203 0000009A         
  204 0000009A F851 3F08       LDR              R3, [R1, #8]!
  205 0000009E 428A            CMP              R2, R1
  206 000000A0 D1F0            BNE              loop
  207 000000A2         
  208 000000A2 F04F 0500       MOV              R5, #0      ;if a value couldn'
                                                            t be found R5 = 0
  209 000000A6 BD0C    end_s   POP              {R2, R3, PC}
  210 000000A8                 ENDP
  211 000000A8         
  212 000000A8         ; Routine for starting copy of ROM into RAM (quantity)
  213 000000A8         initCopy
                               PROC
  214 000000A8 B51E            STMDB            SP!, {R1-R4, LR}
  215 000000AA 4914            LDR              R1, =Sector_quantity
  216 000000AC 4A12            LDR              R2, =Num_sectors
  217 000000AE 6812            LDR              R2, [R2]
  218 000000B0 EA4F 0242       LSL              R2, #1
  219 000000B4 4B0B            LDR              R3, =Sector_uqty
  220 000000B6         
  221 000000B6 680C            LDR              R4, [R1]
  222 000000B8 601C            STR              R4, [R3]
  223 000000BA 1E52    copyLopp
                               SUBS             R2, R2, #1
  224 000000BC D004            BEQ              endInitCopy
  225 000000BE F851 4F04       LDR              R4, [R1, #4]!
  226 000000C2 F843 4F04       STR              R4, [R3, #4]!
  227 000000C6 E7F8            B                copyLopp
  228 000000C8         
  229 000000C8 BD1E    endInitCopy
                               LDMIA            SP!, {R1-R4, PC}
  230 000000CA                 ENDP
  231 000000CA         
  232 000000CA         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  233 000000CA         
  234 000000CA         NMI_Handler
                               PROC
  235 000000CA                 EXPORT           NMI_Handler               [WEAK
]



ARM Macro Assembler    Page 7 


  236 000000CA E7FE            B                .
  237 000000CC                 ENDP
  239 000000CC         HardFault_Handler
                               PROC
  240 000000CC                 EXPORT           HardFault_Handler         [WEAK
]
  241 000000CC E7FE            B                .
  242 000000CE                 ENDP
  244 000000CE         MemManage_Handler
                               PROC
  245 000000CE                 EXPORT           MemManage_Handler         [WEAK
]
  246 000000CE E7FE            B                .
  247 000000D0                 ENDP
  249 000000D0         BusFault_Handler
                               PROC
  250 000000D0                 EXPORT           BusFault_Handler          [WEAK
]
  251 000000D0 E7FE            B                .
  252 000000D2                 ENDP
  254 000000D2         UsageFault_Handler
                               PROC
  255 000000D2                 EXPORT           UsageFault_Handler        [WEAK
]
  256 000000D2 E7FE            B                .
  257 000000D4                 ENDP
  258 000000D4         SVC_Handler
                               PROC
  259 000000D4                 EXPORT           SVC_Handler               [WEAK
]
  260 000000D4 E7FE            B                .
  261 000000D6                 ENDP
  263 000000D6         DebugMon_Handler
                               PROC
  264 000000D6                 EXPORT           DebugMon_Handler          [WEAK
]
  265 000000D6 E7FE            B                .
  266 000000D8                 ENDP
  267 000000D8         PendSV_Handler
                               PROC
  268 000000D8                 EXPORT           PendSV_Handler            [WEAK
]
  269 000000D8 E7FE            B                .
  270 000000DA                 ENDP
  271 000000DA         SysTick_Handler
                               PROC
  272 000000DA                 EXPORT           SysTick_Handler           [WEAK
]
  273 000000DA E7FE            B                .
  274 000000DC                 ENDP
  275 000000DC         
  276 000000DC         Default_Handler
                               PROC
  277 000000DC         
  278 000000DC                 EXPORT           WDT_IRQHandler            [WEAK
]
  279 000000DC                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  280 000000DC                 EXPORT           TIMER1_IRQHandler         [WEAK



ARM Macro Assembler    Page 8 


]
  281 000000DC                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  282 000000DC                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  283 000000DC                 EXPORT           UART0_IRQHandler          [WEAK
]
  284 000000DC                 EXPORT           UART1_IRQHandler          [WEAK
]
  285 000000DC                 EXPORT           UART2_IRQHandler          [WEAK
]
  286 000000DC                 EXPORT           UART3_IRQHandler          [WEAK
]
  287 000000DC                 EXPORT           PWM1_IRQHandler           [WEAK
]
  288 000000DC                 EXPORT           I2C0_IRQHandler           [WEAK
]
  289 000000DC                 EXPORT           I2C1_IRQHandler           [WEAK
]
  290 000000DC                 EXPORT           I2C2_IRQHandler           [WEAK
]
  291 000000DC                 EXPORT           SPI_IRQHandler            [WEAK
]
  292 000000DC                 EXPORT           SSP0_IRQHandler           [WEAK
]
  293 000000DC                 EXPORT           SSP1_IRQHandler           [WEAK
]
  294 000000DC                 EXPORT           PLL0_IRQHandler           [WEAK
]
  295 000000DC                 EXPORT           RTC_IRQHandler            [WEAK
]
  296 000000DC                 EXPORT           EINT0_IRQHandler          [WEAK
]
  297 000000DC                 EXPORT           EINT1_IRQHandler          [WEAK
]
  298 000000DC                 EXPORT           EINT2_IRQHandler          [WEAK
]
  299 000000DC                 EXPORT           EINT3_IRQHandler          [WEAK
]
  300 000000DC                 EXPORT           ADC_IRQHandler            [WEAK
]
  301 000000DC                 EXPORT           BOD_IRQHandler            [WEAK
]
  302 000000DC                 EXPORT           USB_IRQHandler            [WEAK
]
  303 000000DC                 EXPORT           CAN_IRQHandler            [WEAK
]
  304 000000DC                 EXPORT           DMA_IRQHandler            [WEAK
]
  305 000000DC                 EXPORT           I2S_IRQHandler            [WEAK
]
  306 000000DC                 EXPORT           ENET_IRQHandler           [WEAK
]
  307 000000DC                 EXPORT           RIT_IRQHandler            [WEAK
]
  308 000000DC                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  309 000000DC                 EXPORT           QEI_IRQHandler            [WEAK
]



ARM Macro Assembler    Page 9 


  310 000000DC                 EXPORT           PLL1_IRQHandler           [WEAK
]
  311 000000DC                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  312 000000DC                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  313 000000DC         
  314 000000DC         WDT_IRQHandler
  315 000000DC         TIMER0_IRQHandler
  316 000000DC         TIMER1_IRQHandler
  317 000000DC         TIMER2_IRQHandler
  318 000000DC         TIMER3_IRQHandler
  319 000000DC         UART0_IRQHandler
  320 000000DC         UART1_IRQHandler
  321 000000DC         UART2_IRQHandler
  322 000000DC         UART3_IRQHandler
  323 000000DC         PWM1_IRQHandler
  324 000000DC         I2C0_IRQHandler
  325 000000DC         I2C1_IRQHandler
  326 000000DC         I2C2_IRQHandler
  327 000000DC         SPI_IRQHandler
  328 000000DC         SSP0_IRQHandler
  329 000000DC         SSP1_IRQHandler
  330 000000DC         PLL0_IRQHandler
  331 000000DC         RTC_IRQHandler
  332 000000DC         EINT0_IRQHandler
  333 000000DC         EINT1_IRQHandler
  334 000000DC         EINT2_IRQHandler
  335 000000DC         EINT3_IRQHandler
  336 000000DC         ADC_IRQHandler
  337 000000DC         BOD_IRQHandler
  338 000000DC         USB_IRQHandler
  339 000000DC         CAN_IRQHandler
  340 000000DC         DMA_IRQHandler
  341 000000DC         I2S_IRQHandler
  342 000000DC         ENET_IRQHandler
  343 000000DC         RIT_IRQHandler
  344 000000DC         MCPWM_IRQHandler
  345 000000DC         QEI_IRQHandler
  346 000000DC         PLL1_IRQHandler
  347 000000DC         USBActivity_IRQHandler
  348 000000DC         CANActivity_IRQHandler
  349 000000DC         
  350 000000DC E7FE            B                .
  351 000000DE         
  352 000000DE                 ENDP
  353 000000DE         
  354 000000DE         
  355 000000DE 00 00           ALIGN
  356 000000E0         
  357 000000E0         
  358 000000E0         ; User Initial Stack & Heap
  359 000000E0         
  360 000000E0                 EXPORT           __initial_sp
  361 000000E0                 EXPORT           __heap_base
  362 000000E0                 EXPORT           __heap_limit
  363 000000E0         ;EXPORT  __sinfo_base
  364 000000E0         ;EXPORT  __sinfo_limit
  365 000000E0         



ARM Macro Assembler    Page 10 


  366 000000E0                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\startup.d -o.\startup.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\A
RM\INC\NXP\LPC17xx --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION S
ETA 536" --list=.\startup.lst startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup.s
   Uses
      At line 72 in file startup.s
      At line 360 in file startup.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000004

Symbol: Heap_Mem
   Definitions
      At line 48 in file startup.s
   Uses
      None
Comment: Heap_Mem unused
Sector_uqty 00000004

Symbol: Sector_uqty
   Definitions
      At line 47 in file startup.s
   Uses
      At line 145 in file startup.s
      At line 219 in file startup.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup.s
   Uses
      At line 361 in file startup.s
Comment: __heap_base used once
__heap_limit 00000204

Symbol: __heap_limit
   Definitions
      At line 49 in file startup.s
   Uses
      At line 362 in file startup.s
Comment: __heap_limit used once
total_tickets 00000000

Symbol: total_tickets
   Definitions
      At line 46 in file startup.s
   Uses
      At line 150 in file startup.s
Comment: total_tickets used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Num_sectors 00000060

Symbol: Num_sectors
   Definitions
      At line 55 in file startup.s
   Uses
      At line 191 in file startup.s
      At line 216 in file startup.s

SECTORINFO 00000000

Symbol: SECTORINFO
   Definitions
      At line 52 in file startup.s
   Uses
      None
Comment: SECTORINFO unused
Sector_prices 00000000

Symbol: Sector_prices
   Definitions
      At line 53 in file startup.s
   Uses
      At line 146 in file startup.s
Comment: Sector_prices used once
Sector_quantity 00000030

Symbol: Sector_quantity
   Definitions
      At line 54 in file startup.s
   Uses
      At line 215 in file startup.s
Comment: Sector_quantity used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TICKETREQUEST 00000000

Symbol: TICKETREQUEST
   Definitions
      At line 59 in file startup.s
   Uses
      None
Comment: TICKETREQUEST unused
Ticket_requests 00000018

Symbol: Ticket_requests
   Definitions
      At line 61 in file startup.s
   Uses
      At line 148 in file startup.s
Comment: Ticket_requests used once
Tickets 00000000

Symbol: Tickets
   Definitions
      At line 60 in file startup.s
   Uses
      At line 147 in file startup.s
Comment: Tickets used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 69 in file startup.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 72 in file startup.s
   Uses
      At line 70 in file startup.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 128 in file startup.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 129 in file startup.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 133 in file startup.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 000000DC

Symbol: ADC_IRQHandler
   Definitions
      At line 336 in file startup.s
   Uses
      At line 112 in file startup.s
      At line 300 in file startup.s

BOD_IRQHandler 000000DC

Symbol: BOD_IRQHandler
   Definitions
      At line 337 in file startup.s
   Uses
      At line 113 in file startup.s
      At line 301 in file startup.s

BusFault_Handler 000000D0

Symbol: BusFault_Handler
   Definitions
      At line 249 in file startup.s
   Uses
      At line 77 in file startup.s
      At line 250 in file startup.s

CANActivity_IRQHandler 000000DC

Symbol: CANActivity_IRQHandler
   Definitions
      At line 348 in file startup.s
   Uses
      At line 124 in file startup.s
      At line 312 in file startup.s

CAN_IRQHandler 000000DC

Symbol: CAN_IRQHandler
   Definitions
      At line 339 in file startup.s
   Uses
      At line 115 in file startup.s
      At line 303 in file startup.s

DMA_IRQHandler 000000DC

Symbol: DMA_IRQHandler
   Definitions
      At line 340 in file startup.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 116 in file startup.s
      At line 304 in file startup.s

DebugMon_Handler 000000D6

Symbol: DebugMon_Handler
   Definitions
      At line 263 in file startup.s
   Uses
      At line 84 in file startup.s
      At line 264 in file startup.s

Default_Handler 000000DC

Symbol: Default_Handler
   Definitions
      At line 276 in file startup.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 000000DC

Symbol: EINT0_IRQHandler
   Definitions
      At line 332 in file startup.s
   Uses
      At line 108 in file startup.s
      At line 296 in file startup.s

EINT1_IRQHandler 000000DC

Symbol: EINT1_IRQHandler
   Definitions
      At line 333 in file startup.s
   Uses
      At line 109 in file startup.s
      At line 297 in file startup.s

EINT2_IRQHandler 000000DC

Symbol: EINT2_IRQHandler
   Definitions
      At line 334 in file startup.s
   Uses
      At line 110 in file startup.s
      At line 298 in file startup.s

EINT3_IRQHandler 000000DC

Symbol: EINT3_IRQHandler
   Definitions
      At line 335 in file startup.s
   Uses
      At line 111 in file startup.s
      At line 299 in file startup.s

ENET_IRQHandler 000000DC

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 342 in file startup.s
   Uses
      At line 118 in file startup.s
      At line 306 in file startup.s

HardFault_Handler 000000CC

Symbol: HardFault_Handler
   Definitions
      At line 239 in file startup.s
   Uses
      At line 75 in file startup.s
      At line 240 in file startup.s

I2C0_IRQHandler 000000DC

Symbol: I2C0_IRQHandler
   Definitions
      At line 324 in file startup.s
   Uses
      At line 100 in file startup.s
      At line 288 in file startup.s

I2C1_IRQHandler 000000DC

Symbol: I2C1_IRQHandler
   Definitions
      At line 325 in file startup.s
   Uses
      At line 101 in file startup.s
      At line 289 in file startup.s

I2C2_IRQHandler 000000DC

Symbol: I2C2_IRQHandler
   Definitions
      At line 326 in file startup.s
   Uses
      At line 102 in file startup.s
      At line 290 in file startup.s

I2S_IRQHandler 000000DC

Symbol: I2S_IRQHandler
   Definitions
      At line 341 in file startup.s
   Uses
      At line 117 in file startup.s
      At line 305 in file startup.s

MCPWM_IRQHandler 000000DC

Symbol: MCPWM_IRQHandler
   Definitions
      At line 344 in file startup.s
   Uses
      At line 120 in file startup.s
      At line 308 in file startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


MemManage_Handler 000000CE

Symbol: MemManage_Handler
   Definitions
      At line 244 in file startup.s
   Uses
      At line 76 in file startup.s
      At line 245 in file startup.s

NMI_Handler 000000CA

Symbol: NMI_Handler
   Definitions
      At line 234 in file startup.s
   Uses
      At line 74 in file startup.s
      At line 235 in file startup.s

PLL0_IRQHandler 000000DC

Symbol: PLL0_IRQHandler
   Definitions
      At line 330 in file startup.s
   Uses
      At line 106 in file startup.s
      At line 294 in file startup.s

PLL1_IRQHandler 000000DC

Symbol: PLL1_IRQHandler
   Definitions
      At line 346 in file startup.s
   Uses
      At line 122 in file startup.s
      At line 310 in file startup.s

PWM1_IRQHandler 000000DC

Symbol: PWM1_IRQHandler
   Definitions
      At line 323 in file startup.s
   Uses
      At line 99 in file startup.s
      At line 287 in file startup.s

PendSV_Handler 000000D8

Symbol: PendSV_Handler
   Definitions
      At line 267 in file startup.s
   Uses
      At line 86 in file startup.s
      At line 268 in file startup.s

QEI_IRQHandler 000000DC

Symbol: QEI_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 345 in file startup.s
   Uses
      At line 121 in file startup.s
      At line 309 in file startup.s

RIT_IRQHandler 000000DC

Symbol: RIT_IRQHandler
   Definitions
      At line 343 in file startup.s
   Uses
      At line 119 in file startup.s
      At line 307 in file startup.s

RTC_IRQHandler 000000DC

Symbol: RTC_IRQHandler
   Definitions
      At line 331 in file startup.s
   Uses
      At line 107 in file startup.s
      At line 295 in file startup.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 138 in file startup.s
   Uses
      At line 73 in file startup.s
      At line 139 in file startup.s
      At line 140 in file startup.s

SPI_IRQHandler 000000DC

Symbol: SPI_IRQHandler
   Definitions
      At line 327 in file startup.s
   Uses
      At line 103 in file startup.s
      At line 291 in file startup.s

SSP0_IRQHandler 000000DC

Symbol: SSP0_IRQHandler
   Definitions
      At line 328 in file startup.s
   Uses
      At line 104 in file startup.s
      At line 292 in file startup.s

SSP1_IRQHandler 000000DC

Symbol: SSP1_IRQHandler
   Definitions
      At line 329 in file startup.s
   Uses
      At line 105 in file startup.s
      At line 293 in file startup.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


SVC_Handler 000000D4

Symbol: SVC_Handler
   Definitions
      At line 258 in file startup.s
   Uses
      At line 83 in file startup.s
      At line 259 in file startup.s

SysTick_Handler 000000DA

Symbol: SysTick_Handler
   Definitions
      At line 271 in file startup.s
   Uses
      At line 87 in file startup.s
      At line 272 in file startup.s

TIMER0_IRQHandler 000000DC

Symbol: TIMER0_IRQHandler
   Definitions
      At line 315 in file startup.s
   Uses
      At line 91 in file startup.s
      At line 279 in file startup.s

TIMER1_IRQHandler 000000DC

Symbol: TIMER1_IRQHandler
   Definitions
      At line 316 in file startup.s
   Uses
      At line 92 in file startup.s
      At line 280 in file startup.s

TIMER2_IRQHandler 000000DC

Symbol: TIMER2_IRQHandler
   Definitions
      At line 317 in file startup.s
   Uses
      At line 93 in file startup.s
      At line 281 in file startup.s

TIMER3_IRQHandler 000000DC

Symbol: TIMER3_IRQHandler
   Definitions
      At line 318 in file startup.s
   Uses
      At line 94 in file startup.s
      At line 282 in file startup.s

UART0_IRQHandler 000000DC

Symbol: UART0_IRQHandler
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 319 in file startup.s
   Uses
      At line 95 in file startup.s
      At line 283 in file startup.s

UART1_IRQHandler 000000DC

Symbol: UART1_IRQHandler
   Definitions
      At line 320 in file startup.s
   Uses
      At line 96 in file startup.s
      At line 284 in file startup.s

UART2_IRQHandler 000000DC

Symbol: UART2_IRQHandler
   Definitions
      At line 321 in file startup.s
   Uses
      At line 97 in file startup.s
      At line 285 in file startup.s

UART3_IRQHandler 000000DC

Symbol: UART3_IRQHandler
   Definitions
      At line 322 in file startup.s
   Uses
      At line 98 in file startup.s
      At line 286 in file startup.s

USBActivity_IRQHandler 000000DC

Symbol: USBActivity_IRQHandler
   Definitions
      At line 347 in file startup.s
   Uses
      At line 123 in file startup.s
      At line 311 in file startup.s

USB_IRQHandler 000000DC

Symbol: USB_IRQHandler
   Definitions
      At line 338 in file startup.s
   Uses
      At line 114 in file startup.s
      At line 302 in file startup.s

UsageFault_Handler 000000D2

Symbol: UsageFault_Handler
   Definitions
      At line 254 in file startup.s
   Uses
      At line 78 in file startup.s
      At line 255 in file startup.s




ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

WDT_IRQHandler 000000DC

Symbol: WDT_IRQHandler
   Definitions
      At line 314 in file startup.s
   Uses
      At line 90 in file startup.s
      At line 278 in file startup.s

copyLopp 000000BA

Symbol: copyLopp
   Definitions
      At line 223 in file startup.s
   Uses
      At line 227 in file startup.s
Comment: copyLopp used once
endInitCopy 000000C8

Symbol: endInitCopy
   Definitions
      At line 229 in file startup.s
   Uses
      At line 224 in file startup.s
Comment: endInitCopy used once
end_p 00000076

Symbol: end_p
   Definitions
      At line 183 in file startup.s
   Uses
      None
Comment: end_p unused
end_s 000000A6

Symbol: end_s
   Definitions
      At line 209 in file startup.s
   Uses
      At line 199 in file startup.s
      At line 202 in file startup.s

finalSet 00000068

Symbol: finalSet
   Definitions
      At line 180 in file startup.s
   Uses
      At line 164 in file startup.s
      At line 177 in file startup.s

initCopy 000000A8

Symbol: initCopy
   Definitions
      At line 213 in file startup.s
   Uses
      At line 143 in file startup.s
Comment: initCopy used once



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

loop 00000084

Symbol: loop
   Definitions
      At line 196 in file startup.s
   Uses
      At line 206 in file startup.s
Comment: loop used once
reqLoop 00000020

Symbol: reqLoop
   Definitions
      At line 155 in file startup.s
   Uses
      At line 178 in file startup.s
Comment: reqLoop used once
subGet 00000078

Symbol: subGet
   Definitions
      At line 189 in file startup.s
   Uses
      At line 157 in file startup.s
      At line 165 in file startup.s
      At line 169 in file startup.s

56 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000200

Symbol: Heap_Size
   Definitions
      At line 42 in file startup.s
   Uses
      At line 48 in file startup.s
Comment: Heap_Size used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup.s
   Uses
      At line 34 in file startup.s
Comment: Stack_Size used once
2 symbols
414 symbols in table
